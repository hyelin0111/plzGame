package plzGame;

import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import java.util.Random;
import javax.swing.*;

public class Game extends JPanel {
	Panel south;
	Image img_buffer = null;
	Graphics buffer = null;
	
	Image img = null;		// 흙
	Image img2 = null;		// 위쪽 풀 돌
	Image img3 = null;		// 오른쪽 풀 돌
	Image img4 = null;		// 아래쪽 풀 돌
	Image img5 = null;		// 왼쪽 풀 돌
	Image img6 = null;		// 일반 돌
	Image img7 = null;		// 깨진 흙
	Image img8 = null;		// 빨간 문
	Image img9 = null;		// 파란 문
	Image img10 = null;		// 파란 캐릭터 - 앞모습
	Image img11 = null;		// 파란 캐릭터 - 왼쪽
	Image img12 = null;		// 파란 캐릭터 - 오른쪽
	Image img13 = null;		// 파란 캐릭터 - 뒷모습
	Image img14 = null;		// 빨간 캐릭터 - 앞
	Image img15 = null;		// 빨간 캐릭터 - 왼쪽
	Image img16 = null;		// 빨간 캐릭터 - 오른쪽
	Image img17 = null;		// 빨간 캐릭터 - 뒷모습
	Image img18 = null;		// 1번 깨진 흙
	Image img19 = null;		// 2번 깨진 흙
	Image img20 = null;		// 3번 깨진 흙
	Image img21 = null;		// 4번 깨진 흙
	Image img22 = null;		// 5번 깨진 흙
	Image img23 = null;		// 맵 위에 띄울 보석
	Image img24 = null;		// 드릴 아이템
 	Image img25 = null;		// 함정
	Image img26 = null;		// 캐릭터 위에 띄울 보석
	
	static int x = 0;
	static int y = 0;
	static int x1 = 47;			 // 상대방 x,y 좌표 
	static int y1 = 26;
	static int ix = 3;			// 캐릭터 이동 좌표 (배열 인덱스)
	static int jx = 1;	
	int initial_x;
	int initial_y;
	int initial_f = 35;			// 캐릭터 위치 (초기 좌표)
	int initial_g = 75;	
	int size_x;					// 크기
	int size_y;			
	static int p1char = 0;		// p1 방향 (상하좌우)
	static int p2char = 0;		// p2 방향 (상하좌우)
	int tele[] = new int[10];
	static int drealer[] = {0,0,0,0,0}; // 캐릭터 아이템 관리  0 : 함정, 1 : 보석, 2 : 드릴, 3 : 실드
	static int e_drealer = 0;			// 상대방 보석 상태
	
	static int preX = 0;	// 전에 이동한  x좌표
	static int preY = 0;	// 전에 이동한  y좌표
	
	static int[][] taple = { // 맵 상태 - 0~4:장애물, 5:길, 11:흙, 13~14:문 
		 {   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1   },
         {   4,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   5,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   0,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   2   },
         {   14,   5,   0,   11,   0,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   0,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   2   },
         {   4,   5,   11,   11,   11, 11,   11,   11,   0,   0,   0,   11, 11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   0,   2   },
         {   4,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   0,   11,   11,   11,   0,   0,   0,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   2   },
         {   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   0,   0,   0,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   0,   0,   11,   11,   0,   0,   0,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   0,   11,   11,   11,   2   },
         {   4,   11,   0,   0,   11,   11,   0,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11, 11,   11,   11,   0,   11,   0,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   2   },
         {   4,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   0,   0,   0,   0,   0,   11,   11,   11,   11,   11,   11,   0,   11,   0,   11,   11,   11,   0,   0,   0,   0,   11,   11,   11,   11,   11,   11,   0,   11,   0,   0,   0,   0,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   11,   0,   11,   11,   11,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2   },
         {   4,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   0,   0,   0,   11,   2   },
         {   4,   11,   11,   11,   11,   0,   0,   0,   11,   11,   0,   0,   11,   11,   11,   11,   11,   0,   0,   11,   11,   11,   11,   0,   0,   11,   11,   0,   0,   0,   11,   11,   11,   11,   11,   11,   0,   0,   0,   0,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   0,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   0,   11,   0,   0,   0,   0,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   0,   0,   11,   0,   0,   0,   11,   11,   0,   0,   11,   0,   0,   11,   11,   11,   0,   11,   2   },
         {   4,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   0,   11,   2   },
         {   4,   11,   11,   11,   11,   11,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2   },
         {   4,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   2   },
         {   4,   11,   0,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   0,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   0,   11,   11,   0,   0,   11,   0,   0,   11,   0,   0,   0,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   0,   11,   11,   0,   0,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   0,   0,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   5,   2   },
         {   4,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   0,   0,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   0,   0,   11,   0,   0,   11,   11,   0,   0,   11,   0,   0,   11,   11,   11,   0,   0,   11,   11,   0,   5,   13   },
         {   4,   11,   11,   11,   11,   0,   0,   11,   11,   0,   0,   0,   0,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   5,   2   },
         {   4,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   2   }   
      };
	public static void mapReset() {
		int[][] taple2 = { // 맵 상태 - 0~4:장애물, 5:길, 11:흙, 13~14:문 
		 {   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1   },
         {   4,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   5,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   0,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   2   },
         {   14,   5,   0,   11,   0,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   0,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   2   },
         {   4,   5,   11,   11,   11, 11,   11,   11,   0,   0,   0,   11, 11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   0,   2   },
         {   4,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   0,   11,   11,   11,   0,   0,   0,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   2   },
         {   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   0,   0,   0,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   0,   0,   11,   11,   0,   0,   0,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   0,   11,   11,   11,   2   },
         {   4,   11,   0,   0,   11,   11,   0,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11, 11,   11,   11,   0,   11,   0,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   2   },
         {   4,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   0,   0,   0,   0,   0,   11,   11,   11,   11,   11,   11,   0,   11,   0,   11,   11,   11,   0,   0,   0,   0,   11,   11,   11,   11,   11,   11,   0,   11,   0,   0,   0,   0,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   11,   0,   11,   11,   11,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2   },
         {   4,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   0,   0,   0,   11,   2   },
         {   4,   11,   11,   11,   11,   0,   0,   0,   11,   11,   0,   0,   11,   11,   11,   11,   11,   0,   0,   11,   11,   11,   11,   0,   0,   11,   11,   0,   0,   0,   11,   11,   11,   11,   11,   11,   0,   0,   0,   0,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   0,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   0,   11,   0,   0,   0,   0,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   0,   0,   11,   0,   0,   0,   11,   11,   0,   0,   11,   0,   0,   11,   11,   11,   0,   11,   2   },
         {   4,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   0,   11,   2   },
         {   4,   11,   11,   11,   11,   11,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   2   },
         {   4,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   2   },
         {   4,   11,   0,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   0,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   0,   11,   11,   0,   0,   11,   0,   0,   11,   0,   0,   0,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   11,   0,   11,   11,   0,   0,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   0,   0,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   5,   2   },
         {   4,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   0,   0,   0,   11,   0,   11,   11,   0,   11,   11,   11,   11,   11,   0,   0,   11,   0,   0,   11,   11,   0,   0,   11,   0,   0,   11,   11,   11,   0,   0,   11,   11,   0,   5,   13   },
         {   4,   11,   11,   11,   11,   0,   0,   11,   11,   0,   0,   0,   0,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   0,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   0,   11,   11,   11,   11,   11,   5,   2   },
         {   4,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   0,   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,   2   },
         {   4,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   3,   2   }   
      };
		taple = taple2;
	}
	public static void reset() {
		if(MultiClient.is1p) {
			x1 = 1;
			y1 = 3;
			x = 46*15;
			y = 23*15;
			ix = 26;
			jx = 47;
			Game.taple[3][0] = 13;	// 빨간문과 파란문의 이미지 위치 바꿔줌
			Game.taple[26][48] = 14;
			MultiClientThread.makeItem();
		} else {
			x = 0;
			y = 0;
			x1 = 47;			 // 상대방 x,y 좌표 
			y1 = 26;
			ix = 3;			// 캐릭터 이동 좌표 (배열 인덱스)
			jx = 1;	
			Game.taple[3][0] = 14;	// 빨간문과 파란문의 이미지 위치 바꿔줌
			Game.taple[26][48] = 13;
		}
			
		p1char = 0;		// p1 방향 (상하좌우)
		p2char = 0;		// p2 방향 (상하좌우)
		int drealer2[] = {0,0,0,0,0}; // 캐릭터 아이템 관리  0 : 함정, 1 : 보석, 2 : 드릴, 3 : 실드
		drealer = drealer2;
		e_drealer = 0;			// 상대방 보석 상태
	}
	
	public Game() {
		//--------------------------- 이미지 지정 ---------------------------//
		Toolkit tk = Toolkit.getDefaultToolkit();
		img = tk.getImage("img/a.png");			// 흙			case : 11
		img2 = tk.getImage("img/b.png");		// 위쪽 풀 돌		case : 1 
		img3 = tk.getImage("img/b2.png");		// 오른쪽 풀 돌		case : 2
		img4 = tk.getImage("img/b3.png");		// 아래쪽 풀 돌		case : 3
		img5 = tk.getImage("img/b4.png");		// 왼쪽 풀 돌		case : 4
		img6 = tk.getImage("img/c.png");		// 일반돌			case : 0
		img7 = tk.getImage("img/d.png");		// 깨진 흙 
		img8 = tk.getImage("img/reddoor.png"); 	// 빨간 문			case : 14
		img9 = tk.getImage("img/bluedoor.png"); // 파란 문			case : 13
		img10 = tk.getImage("img/p1char.png"); 	// 파란 캐릭터 - 앞모습
		img11 = tk.getImage("img/p1charle.png");// 파란 캐릭터 - 왼쪽
		img12 = tk.getImage("img/p1charri.png");// 파란 캐릭터 - 오른쪽
		img13 = tk.getImage("img/p1charba.png");// 파란 캐릭터 - 뒷모습
		img14 = tk.getImage("img/p2char.png");  // 빨간 캐릭터 - 앞모습
		img15 = tk.getImage("img/p2charle.png");// 빨간 캐릭터 - 왼쪽
		img16 = tk.getImage("img/p2charri.png");// 빨간 캐릭터 - 오른쪽
		img17 = tk.getImage("img/p2charba.png");// 빨간 캐릭터 - 뒷모습
		img18 = tk.getImage("img/d1.png"); 		// 1번 깨진 흙		case : 10,20,30,40,50,60...
		img19 = tk.getImage("img/d2.png"); 		// 2번 깨진 흙		case : 9,19,29,39,49,59.....
		img20 = tk.getImage("img/d3.png"); 		// 3번 깨진 흙		case : 8,18,28,38,48,58.....
		img21 = tk.getImage("img/d4.png"); 		// 4번 깨진 흙		case : 7,17,27,37,47,57......
		img22 = tk.getImage("img/d5.png"); 		// 5번 깨진 흙		case : 6,16,26,36,46,56.......
		img23 = tk.getImage("img/jewel.png"); 	// 맵 위에 띄울 보석case : 15
		img24 = tk.getImage("img/drill.png"); 	// 드릴 아이템		case : 25
		img25 = tk.getImage("img/trap.png"); 	// 함정 			case : 55
		img26 = tk.getImage("img/dia.png");		// 캐릭터 위에 띄울 보석
		
	} // 생성자

	public void update(Graphics g) {
		paint(g);
	}

	public void paint(Graphics g) {
		img_buffer = createImage(780, 500);
		buffer = img_buffer.getGraphics();
		initial_x = 5; 	// 맵이 시작되는 위치(좌우)
		initial_y = 30;// 맵이 시작되는 위치(상하)
		size_x = 15; // 한 칸의 크기
		size_y = 15; // 한 칸의 크기

		//--------------------------- 맵 이미지 출력 ---------------------------//
      for (int i = 0; i < taple.length; i++) {
         for (int j = 0; j < taple[i].length; j++) {
            initial_x += size_x;
            switch (taple[i][j]) {
            case 0:   // 일반 돌
               buffer.drawImage(img6, initial_x, initial_y, size_x, size_y, this);
            break;
            
            case 1:   // 위쪽 풀 돌
               buffer.drawImage(img2, initial_x, initial_y, size_x, size_y, this);
            break;
            
            case 2:   // 오른쪽 풀 돌
               buffer.drawImage(img3, initial_x, initial_y, size_x, size_y, this);
            break;

            case 3:   // 아래쪽 풀 돌
               buffer.drawImage(img4, initial_x, initial_y, size_x, size_y, this);
            break;
            
            case 4:   // 왼쪽 풀 돌
               buffer.drawImage(img5, initial_x, initial_y, size_x, size_y, this);
            break;

            case 11: // 흙
            case 31: 
            case 41: 
            case 61: 
               buffer.drawImage(img, initial_x, initial_y, size_x, size_y, this);
            break;
         
            case 10: // 1번 깨진 흙
            
            case 40: 
            case 60: 
               buffer.drawImage(img18, initial_x, initial_y, size_x, size_y, this);
            break;
            
            case 9:   // 2번 깨진 흙
             
            case 39: 
            case 59: 
               buffer.drawImage(img19, initial_x, initial_y, size_x, size_y, this);
            break;
            
            case 8:   // 3번 깨진 흙
             
            case 38: 
            case 58:
               buffer.drawImage(img20, initial_x, initial_y, size_x, size_y, this);
            break;
               
            case 7:   // 4번 깨진 흙
             
            case 37: 
            case 57: 
               buffer.drawImage(img21, initial_x, initial_y, size_x, size_y, this);
            break;

            case 6:   // 5번 깨진 흙
             
            case 36:
               buffer.drawImage(img22, initial_x, initial_y, size_x, size_y, this);
            break;
            
            case 13: // 파란 문
               buffer.drawImage(img9, initial_x, initial_y, size_x, size_y, this);
            break;
            
            case 14: // 빨간 문
               buffer.drawImage(img8, initial_x, initial_y, size_x, size_y, this);
            break;

            case 21: // 훍
            case 20: // 1번 부숨
            case 19: // 2번 부숨
            case 18: // 3번 부숨
            case 17: // 4 번 부숨
            case 16: // 5번 부숨
            case 15: // 맵 위에 띄울 보석 아이템
               buffer.drawImage(img23, initial_x, initial_y, size_x, size_y, this);
            break;   
            case 30: 
            case 29:
            case 28:
            case 27:
            case 26:
            case 25: // 드릴 아이템
               buffer.drawImage(img24, initial_x, initial_y, size_x, size_y, this);
            break;

            case 55: // 함정
            case 56: 
               buffer.drawImage(img25, initial_x, initial_y, size_x, size_y, this);
            break;
            }
         }
         initial_x = 5;
         initial_y += size_y;
      }
	
		
		//--------------------------- 캐릭터 이미지 출력 ---------------------------//
		int a = 20, b = 30;
		if (drealer[1]!=0)	// 1p 보석 먹었을 때 이미지 출력
			buffer.drawImage(img26, initial_f + x+2, initial_g + y-13, size_x-5, size_y-5, this);
		if (e_drealer == 1)	// 2p 보석 먹었을 때 이미지 출력 
			buffer.drawImage(img26, a + (x1*15)+2, b + (y1*15)-13, size_x-5, size_y-5, this);
		
		switch (p1char) {
		case 0:
		case 1:	
			buffer.drawImage(img10, initial_f + x, initial_g + y, size_x, size_y, this); // 앞모습
			break;
		case 2:	
			buffer.drawImage(img11, initial_f + x, initial_g + y, size_x, size_y, this); // 왼쪽
			break;
		case 3:	
			buffer.drawImage(img12, initial_f + x, initial_g + y, size_x, size_y, this); // 오른쪽
			break;
		case 4:
			buffer.drawImage(img13, initial_f + x, initial_g + y, size_x, size_y, this); // 뒷모습
			break;
		}
		
		switch (p2char) {	
		case 0:
		case 1:
			buffer.drawImage(img14, a + (x1*15), b + (y1*15), size_x, size_y, this); // 앞모습
			break;
		case 2:
			buffer.drawImage(img15, a + (x1*15), b + (y1*15), size_x, size_y, this); // 왼쪽
			break;
		case 3:
			buffer.drawImage(img16, a + (x1*15), b + (y1*15), size_x, size_y, this); // 오른쪽
			break;
		case 4:
			buffer.drawImage(img17, a + (x1*15), b + (y1*15), size_x, size_y, this); // 뒷모습
			break;
		}
		g.drawImage(img_buffer, 0, 0, this);
		repaint();
	}
}